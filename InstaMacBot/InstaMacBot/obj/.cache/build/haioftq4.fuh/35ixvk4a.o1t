<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class UserApi
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class UserApi
   ">
    <meta name="generator" content="docfx 2.58.0.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="InstaMacBot.classes.UserApi">
  
  
  <h1 id="InstaMacBot_classes_UserApi" data-uid="InstaMacBot.classes.UserApi" class="text-break">Class UserApi
  </h1>
  <div class="markdown level0 summary"><p>this class represents the instagram user and contains the api taken from InstagramApiSharp (github project: <a href="https://github.com/ramtinak/InstagramApiSharp">https://github.com/ramtinak/InstagramApiSharp</a>)</p>
<p>to do all action on instagram</p>
<p>the objects of this class are mutable</p>
<p>check InstagramApiSharp wiki <a href="https://github.com/ramtinak/InstagramApiSharp/wiki">https://github.com/ramtinak/InstagramApiSharp/wiki</a> to see all IResult used inside the functions</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">UserApi</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="InstaMacBot.classes.html">InstaMacBot.classes</a></h6>
  <h6><strong>Assembly</strong>: InstaMacBot.dll</h6>
  <h5 id="InstaMacBot_classes_UserApi_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class UserApi</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="InstaMacBot_classes_UserApi__ctor_" data-uid="InstaMacBot.classes.UserApi.#ctor*"></a>
  <h4 id="InstaMacBot_classes_UserApi__ctor_System_String_System_String_" data-uid="InstaMacBot.classes.UserApi.#ctor(System.String,System.String)">UserApi(String, String)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public UserApi(string username, string password)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">username</span></td>
        <td><p>username of the account that will login to instagram ant the bot will perform actions</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">password</span></td>
        <td><p>password of the account to login</p>
</td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="InstaMacBot_classes_UserApi_is_logged_" data-uid="InstaMacBot.classes.UserApi.is_logged*"></a>
  <h4 id="InstaMacBot_classes_UserApi_is_logged" data-uid="InstaMacBot.classes.UserApi.is_logged">is_logged</h4>
  <div class="markdown level1 summary"><p>check if the account associated to this is logged</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool is_logged { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p>true if is logged</p>
<p>false if isn&apos;t logged</p>
</td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="InstaMacBot_classes_UserApi_follow_" data-uid="InstaMacBot.classes.UserApi.follow*"></a>
  <h4 id="InstaMacBot_classes_UserApi_follow_System_String_" data-uid="InstaMacBot.classes.UserApi.follow(System.String)">follow(String)</h4>
  <div class="markdown level1 summary"><p>follow an account (with the account that this is logged) </p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;bool&gt; follow(string username)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">username</span></td>
        <td><p>the username of the account that will be followed</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">System.Boolean</span>&gt;</td>
        <td><p>true if the follow was successfully</p>
<p>false if the follow wasn&apos;t successfully</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_get_following_" data-uid="InstaMacBot.classes.UserApi.get_following*"></a>
  <h4 id="InstaMacBot_classes_UserApi_get_following" data-uid="InstaMacBot.classes.UserApi.get_following">get_following()</h4>
  <div class="markdown level1 summary"><p>get a set of accounts username that this account (the account associated to this) is following</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;HashSet&lt;string&gt;&gt; get_following()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">System.Collections.Generic.HashSet</span>&lt;<span class="xref">System.String</span>&gt;&gt;</td>
        <td><p>get a set of accounts username that this account is following</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_get_user_" data-uid="InstaMacBot.classes.UserApi.get_user*"></a>
  <h4 id="InstaMacBot_classes_UserApi_get_user_System_String_" data-uid="InstaMacBot.classes.UserApi.get_user(System.String)">get_user(String)</h4>
  <div class="markdown level1 summary"><p>get an instagram user</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;IResult&lt;InstaUser&gt;&gt; get_user(string username)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">username</span></td>
        <td><p>the username of the instagram user</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">InstagramApiSharp.Classes.IResult</span>&lt;<span class="xref">InstagramApiSharp.Classes.Models.InstaUser</span>&gt;&gt;</td>
        <td><p>an instagram user</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_get_user_followers_" data-uid="InstaMacBot.classes.UserApi.get_user_followers*"></a>
  <h4 id="InstaMacBot_classes_UserApi_get_user_followers_System_String_" data-uid="InstaMacBot.classes.UserApi.get_user_followers(System.String)">get_user_followers(String)</h4>
  <div class="markdown level1 summary"><p>get a list of account that are followers of a target account</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;IResult&lt;InstaUserShortList&gt;&gt; get_user_followers(string username)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">username</span></td>
        <td><p>the target account</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">InstagramApiSharp.Classes.IResult</span>&lt;<span class="xref">InstagramApiSharp.Classes.Models.InstaUserShortList</span>&gt;&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_get_user_from_hastag_" data-uid="InstaMacBot.classes.UserApi.get_user_from_hastag*"></a>
  <h4 id="InstaMacBot_classes_UserApi_get_user_from_hastag_System_String_" data-uid="InstaMacBot.classes.UserApi.get_user_from_hastag(System.String)">get_user_from_hastag(String)</h4>
  <div class="markdown level1 summary"><p>get a set of account username that have posted a photo recently with a target hastag</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;HashSet&lt;string&gt;&gt; get_user_from_hastag(string hastag)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">hastag</span></td>
        <td><p>the target hastag</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">System.Collections.Generic.HashSet</span>&lt;<span class="xref">System.String</span>&gt;&gt;</td>
        <td><p>a set of account username that have posted a photo recently with the target hastag</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_get_user_from_location_" data-uid="InstaMacBot.classes.UserApi.get_user_from_location*"></a>
  <h4 id="InstaMacBot_classes_UserApi_get_user_from_location_System_String_" data-uid="InstaMacBot.classes.UserApi.get_user_from_location(System.String)">get_user_from_location(String)</h4>
  <div class="markdown level1 summary"><p>get a set of account username that have posted a photo recently with a target location id</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;HashSet&lt;string&gt;&gt; get_user_from_location(string location_id)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">location_id</span></td>
        <td><p>the target location id</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">System.Collections.Generic.HashSet</span>&lt;<span class="xref">System.String</span>&gt;&gt;</td>
        <td><p>a set of account username that have posted a photo recently with the target location id</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_get_user_info_" data-uid="InstaMacBot.classes.UserApi.get_user_info*"></a>
  <h4 id="InstaMacBot_classes_UserApi_get_user_info_System_String_" data-uid="InstaMacBot.classes.UserApi.get_user_info(System.String)">get_user_info(String)</h4>
  <div class="markdown level1 summary"><p>get the infos of an instagram user</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;IResult&lt;InstaUserInfo&gt;&gt; get_user_info(string username)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">username</span></td>
        <td><p>the username of the instagram user</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">InstagramApiSharp.Classes.IResult</span>&lt;<span class="xref">InstagramApiSharp.Classes.Models.InstaUserInfo</span>&gt;&gt;</td>
        <td><p>the infos of an instagram user</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_get_username_" data-uid="InstaMacBot.classes.UserApi.get_username*"></a>
  <h4 id="InstaMacBot_classes_UserApi_get_username" data-uid="InstaMacBot.classes.UserApi.get_username">get_username()</h4>
  <div class="markdown level1 summary"><p>get the username of this: is the account associated to this (this object)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string get_username()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_lasts_media_id_" data-uid="InstaMacBot.classes.UserApi.lasts_media_id*"></a>
  <h4 id="InstaMacBot_classes_UserApi_lasts_media_id_System_String_" data-uid="InstaMacBot.classes.UserApi.lasts_media_id(System.String)">lasts_media_id(String)</h4>
  <div class="markdown level1 summary"><p>scrape a list of lasts media of an account</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;IResult&lt;InstaMediaList&gt;&gt; lasts_media_id(string username)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">username</span></td>
        <td><p>username of the account where scrape lasts media</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">InstagramApiSharp.Classes.IResult</span>&lt;<span class="xref">InstagramApiSharp.Classes.Models.InstaMediaList</span>&gt;&gt;</td>
        <td><p>a list of lasts media of an account</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_loginAsync_" data-uid="InstaMacBot.classes.UserApi.loginAsync*"></a>
  <h4 id="InstaMacBot_classes_UserApi_loginAsync" data-uid="InstaMacBot.classes.UserApi.loginAsync">loginAsync()</h4>
  <div class="markdown level1 summary"><p>login inside the account associated to this</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;string&gt; loginAsync()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">System.String</span>&gt;</td>
        <td><p>&quot;&quot; (empty string) if can login inside the account</p>
<p>an error message if can&apos;t login in to the account</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_put_like_" data-uid="InstaMacBot.classes.UserApi.put_like*"></a>
  <h4 id="InstaMacBot_classes_UserApi_put_like_System_String_" data-uid="InstaMacBot.classes.UserApi.put_like(System.String)">put_like(String)</h4>
  <div class="markdown level1 summary"><p>leave a like on a media (with the account that this is logged) </p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;bool&gt; put_like(string media_id)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">media_id</span></td>
        <td><p>the id if the media that this will leave like</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">System.Boolean</span>&gt;</td>
        <td><p>true if the like was successfully placed</p>
<p>false if the like wasn&apos;t successfully placed</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_send_dm_text_" data-uid="InstaMacBot.classes.UserApi.send_dm_text*"></a>
  <h4 id="InstaMacBot_classes_UserApi_send_dm_text_System_String_System_String_" data-uid="InstaMacBot.classes.UserApi.send_dm_text(System.String,System.String)">send_dm_text(String, String)</h4>
  <div class="markdown level1 summary"><p>this account will send a dm to an account</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;bool&gt; send_dm_text(string message, string username_to_send)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">message</span></td>
        <td><p>the dm message</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">username_to_send</span></td>
        <td><p>the destinatary account username</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">System.Boolean</span>&gt;</td>
        <td><p>true if the dm was sent</p>
<p>false if the dm wasn&apos;t sent</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InstaMacBot_classes_UserApi_unfollow_" data-uid="InstaMacBot.classes.UserApi.unfollow*"></a>
  <h4 id="InstaMacBot_classes_UserApi_unfollow_System_Int64_" data-uid="InstaMacBot.classes.UserApi.unfollow(System.Int64)">unfollow(Int64)</h4>
  <div class="markdown level1 summary"><p>unfollow an account (with the account that this is logged) </p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public async Task&lt;bool&gt; unfollow(long user_id)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td><span class="parametername">user_id</span></td>
        <td><p>the id of the account that will be unfollowed</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Threading.Tasks.Task</span>&lt;<span class="xref">System.Boolean</span>&gt;</td>
        <td><p>true if the unfollow was successfully</p>
<p>false if the unfollow wasn&apos;t successfully</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
